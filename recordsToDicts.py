# converts recordlist generated by Neo4j cypher to a list of dictionaries
# each dictionary contains all data from each record in property:value format
# and contains id(node) data in the node_id key pair
# it takes input in form : 'WHATEVERHAPPENS-IN-THE-QUERY return n, keys(n)'

def convertRecordListToDict(records):
  keySet=getPropertySet(records)
  one_record = {}
  all_records=[]
  for x in records:
      node_id = x[0].ref[5:]
      one_record['node_id'] = node_id
      for y in keySet:
        one_record[y]=x[0][y]
      all_records.append(one_record)
      one_record={}
  return all_records

# inspects all records and extracts properties mentioned in them to ensure it
# gets all. Returns a set of property values.
# it takes input in form : 'WHATEVERHAPPENS-IN-THE-QUERY return n, keys(n)'
def getPropertySet(records):
    keySet=set()
    for x in records:
      for y in x[1]:
        keySet.add(y)
    return keySet
